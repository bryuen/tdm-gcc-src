Allow spaces in specfile entries that expand to full paths if they are library files

From: J.M. Eubank <john@thesnappy.net>

From
   <https://github.com/msys2/MINGW-packages/blob/master/mingw-w64-gcc/0012-Handle-spaces-in-path-for-default-manifest.patch>

# HG changeset patch
# Parent  80c5a58ce2412b6977cd5b103e4387042fb6955a
---
 gcc/gcc.c |    9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/gcc/gcc.c b/gcc/gcc.c
index a648e5ba4..6ef561519 100644
--- a/gcc/gcc.c
+++ b/gcc/gcc.c
@@ -6130,7 +6130,6 @@ eval_spec_function (const char *func, const char *args,
   int save_arg_going;
   int save_delete_this_arg;
   int save_this_is_output_file;
-  int save_this_is_library_file;
   int save_input_from_pipe;
   int save_this_is_linker_script;
   const char *save_suffix_subst;
@@ -6148,7 +6147,6 @@ eval_spec_function (const char *func, const char *args,
   save_arg_going = arg_going;
   save_delete_this_arg = delete_this_arg;
   save_this_is_output_file = this_is_output_file;
-  save_this_is_library_file = this_is_library_file;
   save_this_is_linker_script = this_is_linker_script;
   save_input_from_pipe = input_from_pipe;
   save_suffix_subst = suffix_subst;
@@ -6180,13 +6178,15 @@ eval_spec_function (const char *func, const char *args,
 			 argbuf.address ());
 
   /* Pop the spec processing context.  */
+  const char *saved_library_file = this_is_library_file ? argbuf.address()[0] : NULL;
   argbuf.release ();
   argbuf = save_argbuf;
+  if (saved_library_file)
+    argbuf.safe_push (saved_library_file);
 
   arg_going = save_arg_going;
   delete_this_arg = save_delete_this_arg;
   this_is_output_file = save_this_is_output_file;
-  this_is_library_file = save_this_is_library_file;
   this_is_linker_script = save_this_is_linker_script;
   input_from_pipe = save_input_from_pipe;
   suffix_subst = save_suffix_subst;
@@ -6258,8 +6258,9 @@ handle_spec_function (const char *p, bool *retval_nonnull,
   /* p now points to just past the end of the spec function expression.  */
 
   funcval = eval_spec_function (func, args, soft_matched_part);
-  if (funcval != NULL && do_spec_1 (funcval, 0, NULL) < 0)
+  if (funcval != NULL && this_is_library_file == 0 && do_spec_1 (funcval, 0, NULL) < 0)
     p = NULL;
+
   if (retval_nonnull)
     *retval_nonnull = funcval != NULL;
 
