Allow libgfortran to use umask semantics on MinGW64 but not on MinGW32

From: J.M. Eubank <john@thesnappy.net>

# HG changeset patch
# Parent  443ac5d1e5fb42affb961d9d76d5922f77cad45f
---
 libgfortran/io/unix.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/libgfortran/io/unix.c b/libgfortran/io/unix.c
index 563c7cb64..6d6d72771 100644
--- a/libgfortran/io/unix.c
+++ b/libgfortran/io/unix.c
@@ -1201,7 +1201,7 @@ tempfile_open (const char *tempdir, char **fname)
 {
   int fd;
   const char *slash = "/";
-#if defined(HAVE_UMASK) && defined(HAVE_MKSTEMP)
+#if defined(HAVE_UMASK) && defined(HAVE_MKSTEMP) && (!defined(_WIN32) || defined(_WIN64))
   mode_t mode_mask;
 #endif
 
@@ -1225,7 +1225,7 @@ tempfile_open (const char *tempdir, char **fname)
   snprintf (template, tempdirlen + 23, "%s%sgfortrantmpXXXXXX", 
 	    tempdir, slash);
 
-#ifdef HAVE_UMASK
+#if defined(HAVE_UMASK) && (!defined(_WIN32) || defined(_WIN64))
   /* Temporarily set the umask such that the file has 0600 permissions.  */
   mode_mask = umask (S_IXUSR | S_IRWXG | S_IRWXO);
 #endif
@@ -1237,7 +1237,7 @@ tempfile_open (const char *tempdir, char **fname)
   set_close_on_exec (fd);
 #endif
 
-#ifdef HAVE_UMASK
+#if defined(HAVE_UMASK) && (!defined(_WIN32) || defined(_WIN64))
   (void) umask (mode_mask);
 #endif
 
